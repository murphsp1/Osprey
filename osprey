#/bin/bash

##########################################################
#
# Osprey command line tool
#
# Checkout a config 
# > osprey config <config branch>
#
# Update osprey
# > osprey update <optional branch>
#
# Build osprey
# > osprey make
#
# Clean osprey source
# > osprey clean
#
# Run an osprey job  (this isn't ready yet)
# > osprey run 
#
#########################################################

function display_help {
	echo "This is the help"
}

function handle_error {
	echo "Osprey Error: $1"
	exit
}

function make_osprey {
	cd src
	javac *.java
	cd ..
}

function clean_osprey {
	cd src
	rm *.class
	cd ..
}

function run_osprey {
	mpirun -np 80 java -Xmx1024M KStar mpi -c KStar.cfg KSMaster System.cfg MutSearch.cfg > test.out
}

function update_config {
	if [ -z "$1" ]
	then
		handle_error "No config name"
	else
		# does the config directory exist
		if [ ! -d config ]; then
			git clone git://github.com/cash/OspreyConfig.git config
		fi

		cd config
		git checkout $1
		RESULT=$?
		cd ..

		if [ $RESULT -ne 0 ]; then
			handle_error "Maybe wrong branch name?"
		fi
	fi

	return 0
}

function update_osprey {
	if [ -z "$1" ]
	then
		git pull
	else
		git checkout $1
		git pull origin $1
	fi

	if [ $? -ne 0 ]; then
		handle_error "Unable to update Osprey"
	fi

	make_osprey
}

# main command dispatcher
case "$1" in
	make)
		echo " Building Osprey"
		make_osprey
		;;

	clean)
		echo " Cleaning Osprey"
		clean_osprey
		;;

	run)
		echo " Launcing Osprey"
		;;

	update)
		echo " Updating Osprey"
		if [ -z "$2" ]
		then
			update_osprey
		else
			update_osprey $2
		fi
		;;

	config)
		echo " Updating config to $2"
		update_config $2
		;;

	*)
		display_help
		;;
esac

